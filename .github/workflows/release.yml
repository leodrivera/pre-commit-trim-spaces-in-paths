name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [ main ]

permissions:
  contents: write   # needed to create tags and releases

jobs:
  create-tag-and-release:
    name: Create tag and GitHub Release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure tags/refs are available

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Get current version from pyproject.toml
        id: current_version
        run: |
          CURRENT_VERSION=$(poetry version --short)
          echo "current_version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"

      - name: Get last released version
        id: last_version
        run: |
          # Get the latest tag, fallback to "v1.0.0" if no tags exist
          LAST_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          # Remove 'v' prefix if present
          LAST_VERSION=${LAST_VERSION#v}
          echo "last_version=$LAST_VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT="${{ steps.current_version.outputs.current_version }}"
          LAST="${{ steps.last_version.outputs.last_version }}"
          if [ "$CURRENT" != "$LAST" ]; then
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Determine tag
        if: steps.version_check.outputs.version_changed == 'true'
        id: tag
        run: |
          echo "tag=v${{ steps.current_version.outputs.current_version }}" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        if: steps.version_check.outputs.version_changed == 'true'
        id: tag_exists
        shell: bash
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          if git ls-remote --tags origin "$TAG" | grep -q "$TAG$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create tag (if missing)
        if: steps.version_check.outputs.version_changed == 'true' && steps.tag_exists.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const tag = `v${{ steps.current_version.outputs.current_version }}`;
            const sha = context.sha;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tag}`,
              sha
            });

      - name: Create/Update GitHub Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
          draft: false
          prerelease: false
